
//const pLimit = require("js/plimit.js")
const DEER = {}
//const statlimiter = pLimit(20)
let tpenProjects = []
let dlaCollection = {
    name: "Correspondence between Paul Laurence Dunbar and Alice Moore Dunbar",
    itemListElement: []
}
let dlaReleasedCollection = {
    name: "Correspondence between Paul Laurence Dunbar and Alice Moore Dunbar",
    itemListElement: []
}
let tpenRecords = []
let dlaRecords = []
let assigneeSet = new Set()
const udelHandlePrefix = "https://udspace.udel.edu/handle/"
const udelRestHandlePrefix = "https://udspace.udel.edu/rest/handle/"
const udelIdPrefix = "https://udspace.udel.edu/rest/items/"
const tpenManifestPrefix = "http://t-pen.org/TPEN/project/"
const tpenProjectPrefix = "http://t-pen.org/TPEN/transcription.html?projectID="
const TPproxy = "http://tinypaul.rerum.io/dla/proxy?url="

/**
 * Get all Dunbar Apps Data generated by a given Dunbar Apps UserID (Agent URI)
 * Note this may mean TPEN projects they have and data from dunbar-letters and/or dunbar-poems
 * */
exports.getUserContributions = async function (req, res, next) {
    res.set("Content-Type", "application/json; charset=utf-8")
    let userID = req.params["_id"]
    try {
        let queryObj = {
            "__rerum.generatedBy" : "One Of The DLA Apps",
            "__rerum.history.next" : "exists and is length 0",
            "creator" : "This Dunbar Apps User"
        }
        let match = 
        await fetch("RERUM /query", {
            method: "POST",
            headers: {
                "Content-Type": "application/json; charset=utf-8"
            },
            body: JSON.stringify(queryObj)
        })
        .then(response => response.json())
        .catch(err => { return err })

        if (match) {
            
        }
        let err = new Error(`No User Contributions for user ${userID}`)
        err.status = 404
        throw err
    } catch (error) {
        next(error)
    }
}

/**
 * Get the TPEN project report card for just this provided project ID
 * */
exports.getProjectStatusInfo = async function (req, res, next) {
    res.set("Content-Type", "application/json; charset=utf-8")
    let projectID = req.params["_id"]
    try {
        let match = 
        await fetch("TPEN /getDunbarProjectInfo", {
            method: "POST",
            headers: {
                "Content-Type": "application/json; charset=utf-8"
            },
            body: JSON.stringify(queryObj)
        })
        .then(response => response.json())
        .catch(err => { return err })

        if (match) {
            
        }
        let err = new Error(`No TPEN project with ID ${projectID}`)
        err.status = 404
        throw err
    } catch (error) {
        next(error)
    }
}

/**
 * Get the DLA record report card for the provided record ID
 * */
exports.getRecordStatusInfo = async function (req, res, next) {
    res.set("Content-Type", "application/json; charset=utf-8")
    let recordID = req.params["_id"]
    try {
        let match = DEER.expand(recordID)
        .then(response => response.json())
        .catch(err => { return err })

        if (match) {
            
        }
        let err = new Error(`No record found at ${recordID}`)
        err.status = 404
        throw err
    } catch (error) {
        next(error)
    }
}